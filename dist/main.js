(()=>{"use strict";const t=function(t,n,o){let i=[],e=0,r=0;for(let a=0;a<n;a+=1)i.push({coords:[t[0]+r,t[1]+e],damaged:!1}),"h"===o?e+=1:r+=1;return i},n=function(){return{board:{placed:[],misses:[]},placeship:function(n,o){const i=function(n=[1,1],o=1,i="h",e=!1){return{length:o,damage:t(n,o,i),position:i,sunk:e,hit:function(t){this.damage[t].damaged=!0},isSunk:function(){for(let t=1;t<this.damage.length;t+=1)if(!1===this.damage[t].damaged)return;this.sunk=!0},rotate:function(){let n="h";"h"===this.position&&(n="v"),this.damage=t(this.damage[0].coords,this.length,n),this.position=n}}}(n,o);this.board.placed.push(i)},receiveAttack:function(t){const n=this.board.placed,o=function(){let o=!1;return n.forEach((i=>i.damage.forEach((e=>{e.coords.toString()===t.toString()&&(o=[n.indexOf(i),i.damage.indexOf(e)])})))),o}();if(this.board.misses.push(t),o)return n[o[0]].hit(o[1]),void n[o[0]].isSunk()},areAllShipsSunk:function(){const t=this.board.placed;for(let n=0;n<t.length;n+=1)if(!0!==t[n].sunk)return!1;return!0}}},o=function(){return{attack:function(t,n){if(!t)return!1;const o=t.board.misses[0]?t.board.misses:[[]];for(let i=0;i<o.length;i+=1)if(o[i].toString()!==n.toString())return t.receiveAttack(n),!0;return!1},randomAttack:function(t){const n=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];!1===this.attack(t,n)&&this.randomAttack(t)}}},i=o(),e=n(),r=o(),a=n();console.log(i,e,r,a)})();